/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jump;

import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author Alastair
 */
public class viewtasks extends javax.swing.JFrame {
Connection con = null;
ResultSet rs = null;
PreparedStatement pst = null;
    /**
     * Creates new form viewtasks
     */
    public viewtasks() {
        initComponents();
        //con = connect.ConnectDB();  
        //Update_table();
    }
 private void Update_table(){
            
   try{
       String sql = "select * from tasks" ;
       
       pst=con.prepareStatement(sql);
       rs=pst.executeQuery();
       //tasks_table.setModel(DbUtils.resultSetToTableModel(rs));
       
       
   }
   catch(Exception e){
       JOptionPane.showMessageDialog(null, e);
   }
            
            
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jumpproject.dbPU").createEntityManager();
        tasksQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery.getResultList();
        tasksQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery1.getResultList();
        tasksQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery2.getResultList();
        tasksQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery3.getResultList();
        tasksQuery4 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery4.getResultList();
        tasksQuery5 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery5.getResultList();
        timeslotsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery.getResultList();
        tasksQuery6 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tasks t");
        tasksList6 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tasksQuery6.getResultList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 602, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewtasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewtasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewtasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewtasks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       viewtasks v=new viewtasks();
       v.setVisible(true);
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private java.util.List<jump.Tasks> tasksList;
    private java.util.List<jump.Tasks> tasksList1;
    private java.util.List<jump.Tasks> tasksList2;
    private java.util.List<jump.Tasks> tasksList3;
    private java.util.List<jump.Tasks> tasksList4;
    private java.util.List<jump.Tasks> tasksList5;
    private java.util.List<jump.Tasks> tasksList6;
    private javax.persistence.Query tasksQuery;
    private javax.persistence.Query tasksQuery1;
    private javax.persistence.Query tasksQuery2;
    private javax.persistence.Query tasksQuery3;
    private javax.persistence.Query tasksQuery4;
    private javax.persistence.Query tasksQuery5;
    private javax.persistence.Query tasksQuery6;
    private java.util.List<jump.Timeslots> timeslotsList;
    private javax.persistence.Query timeslotsQuery;
    // End of variables declaration//GEN-END:variables
}
