/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jump;
import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import javax.swing.JOptionPane;
/**
 *
 * @author Alastair
 */
public class viewtimeslots extends javax.swing.JFrame {
Connection con = null;
ResultSet rs = null;
PreparedStatement pst = null;
    /**
     * Creates new form viewtimeslots
     */
    public viewtimeslots() {
        initComponents();
        con=connect.ConnectDB();
        Update_table();
    }
    
        private void Update_table(){
            
   try{
       String sql = "select * from timeslots" ;
       
       pst=con.prepareStatement(sql);
       rs=pst.executeQuery();
       System.out.println(rs.isAfterLast());
       timeslot_table.setModel(DbUtils.resultSetToTableModel(rs));
      
       
       String order = "select * from timeslots ORDER BY timeslot_IDnumber DESC";
       pst=con.prepareStatement(sql);
       rs=pst.executeQuery();
       timeslot_table.repaint(); 
       
       con.close();
       
   }
   catch(Exception e){
       JOptionPane.showMessageDialog(null, e);
   }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jumpproject.dbPU").createEntityManager();
        timeslotsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery.getResultList();
        timeslotsQuery1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery1.getResultList();
        timeslotsQuery2 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery2.getResultList();
        timeslotsQuery3 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery3.getResultList();
        timeslotsQuery4 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList4 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery4.getResultList();
        timeslotsQuery5 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList5 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery5.getResultList();
        timeslotsQuery6 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList6 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery6.getResultList();
        timeslotsQuery7 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Timeslots t");
        timeslotsList7 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : timeslotsQuery7.getResultList();
        jScrollPane2 = new javax.swing.JScrollPane();
        timeslot_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        timeslot_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID number", "Day", "Time", "Duration"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(timeslot_table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewtimeslots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewtimeslots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewtimeslots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewtimeslots.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
                new viewtimeslots().setVisible(true);
                new homescreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable timeslot_table;
    private java.util.List<jump.Timeslots> timeslotsList;
    private java.util.List<jump.Timeslots> timeslotsList1;
    private java.util.List<jump.Timeslots> timeslotsList2;
    private java.util.List<jump.Timeslots> timeslotsList3;
    private java.util.List<jump.Timeslots> timeslotsList4;
    private java.util.List<jump.Timeslots> timeslotsList5;
    private java.util.List<jump.Timeslots> timeslotsList6;
    private java.util.List<jump.Timeslots> timeslotsList7;
    private javax.persistence.Query timeslotsQuery;
    private javax.persistence.Query timeslotsQuery1;
    private javax.persistence.Query timeslotsQuery2;
    private javax.persistence.Query timeslotsQuery3;
    private javax.persistence.Query timeslotsQuery4;
    private javax.persistence.Query timeslotsQuery5;
    private javax.persistence.Query timeslotsQuery6;
    private javax.persistence.Query timeslotsQuery7;
    // End of variables declaration//GEN-END:variables
}
